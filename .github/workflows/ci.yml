name: CI

on:
  pull_request:
  push:
    branches: [master]
  workflow_dispatch:
env:
  NODE_ENV: development
  GRAPHQL_PROXY_DEBUG: debug
  GRAPHQL_PROXY_PORT: 4000
  GRAPHQL_PROXY_CMS_API_BASE_URL: https://cms.test.kuva.hel.ninja/api/
  GRAPHQL_PROXY_API_BASE_URL: https://api.hel.fi
  GRAPHQL_PROXY_LINKED_EVENTS_API_BASE_PATH: linkedevents/v1/
  GRAPHQL_PROXY_LINKED_COURSES_API_BASE_PATH: linkedcourses/v1/
  GRAPHQL_PROXY_MAP_OPEN_DATA_API_BASE_URL: https://kartta.hel.fi/ws/geoserver/avoindata
  GRAPHQL_PROXY_SENTRY_DSN:
  GRAPHQL_PROXY_SENTRY_ENVIRONMENT: local
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '16'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn --prefer-offline
      - name: Run linter
        run: yarn lint
      - name: Run tests
        run: yarn ci
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '16'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn --prefer-offline
      - name: Build application
        run: yarn build
